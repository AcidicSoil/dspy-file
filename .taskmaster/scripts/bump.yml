name: Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'   # publish-only path

permissions:
  contents: write        # needed to push bump commit + tag
  id-token: write        # needed for PyPI Trusted Publishing
  packages: read

jobs:
  # 1) On branch pushes: bump pyproject.toml, commit, and create a tag
  bump-and-tag:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Python
        run: uv python install 3.13

      - name: Read current version from pyproject.toml
        id: vread
        shell: bash
        run: |
          python - <<'PY' >curr.txt
          import re, pathlib, sys
          t = pathlib.Path("pyproject.toml").read_text(encoding="utf-8")
          m = re.search(r'(?m)^\s*version\s*=\s*"([^"]+)"', t)
          print(m.group(1) if m else "", end="")
          PY
          CURR="$(cat curr.txt)"
          if [ -z "$CURR" ]; then
            echo "Could not find version in pyproject.toml" >&2
            exit 1
          fi
          echo "current=$CURR" >> "$GITHUB_OUTPUT"

      - name: Compute next version
        id: vnext
        shell: bash
        run: |
          CURR="${{ steps.vread.outputs.current }}"
          # If x.y.zbN -> bump beta N; else bump patch
          if [[ "$CURR" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)b([0-9]+)$ ]]; then
            MAJ=${BASH_REMATCH[1]}; MIN=${BASH_REMATCH[2]}; PAT=${BASH_REMATCH[3]}; B=${BASH_REMATCH[4]}
            NEW="${MAJ}.${MIN}.${PAT}b$((B+1))"
          elif [[ "$CURR" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJ=${BASH_REMATCH[1]}; MIN=${BASH_REMATCH[2]}; PAT=${BASH_REMATCH[3]}
            NEW="${MAJ}.${MIN}.$((PAT+1))"
          else
            echo "Unrecognized version format: $CURR" >&2
            exit 1
          fi
          echo "new=$NEW" >> "$GITHUB_OUTPUT"
          echo "Next version: $NEW"

      - name: Bump pyproject.toml
        shell: bash
        run: |
          NEW="${{ steps.vnext.outputs.new }}"
          sed -i -E 's/^(version\s*=\s*).*/\1"'"$NEW"'"/' pyproject.toml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "Release: $NEW" || echo "No changes to commit"

      - name: Create tag and push
        shell: bash
        run: |
          NEW="${{ steps.vnext.outputs.new }}"
          TAG="v${NEW}"
          git tag -a "$TAG" -m "Release $TAG" || echo "Tag exists"
          git push --follow-tags origin HEAD:"${GITHUB_REF#refs/heads/}" || true
          git push origin "$TAG" || true

  # 2) On tag pushes (v*): build, test, and publish to PyPI
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/dspyteach   # optional, for UI link
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Install Python
        run: uv python install 3.13
      - name: Build
        run: uv build
      - name: Smoke test (wheel)
        run: uv run --isolated --no-project --with dist/*.whl tests/smoke_test.py
      - name: Smoke test (sdist)
        run: uv run --isolated --no-project --with dist/*.tar.gz tests/smoke_test.py
      - name: Publish (PyPI Trusted Publishing)
        run: uv publish
